name: Build Pipeline

on:
  push:
    branches: ["main", "feature/*"]
  pull_request:
    branches: ["feature/*"]
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  packages: write

concurrency:
  group: ${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RELEASE_REQUIRED: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
  NODEJS_VERSION: 18

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: üé¨ Start
        run: echo 'starting deployment pipeline'
      - uses: actions/checkout@v3
        name: ‚úÖ Checkout
      - name: ‚öôÔ∏è Install NodeJS ${{env.NODEJS_VERSION}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
      - name: üñáÔ∏è Install Dependencies
        run: npm install
      - name: üì≤ Compile
        run: |
          npm run build
      - name: ‚¨ÜÔ∏è Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: src/dist/*
          name: build-${{ github.run_id }}
          retention-days: 1
  Deploy:
    name: Deploy
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Download Artifact
        uses: actions/download-artifact@v3
        with:
          path: dist/*
          name: build-${{ github.run_id }}
      - uses: nelonoel/branch-name@v1.0.1          
      - uses: jsmrcaga/action-netlify-deploy@v2.0.0
        id: Deploy
        name: üåê Deploy to netlify
        continue-on-error: true
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: 4683c5bf-0c7e-4cf7-8d1f-cea16ff8c99f
          NETLIFY_DEPLOY_TO_PROD: ${{ env.RELEASE_REQUIRED }}
          build_directory: "dist"
          install_command: "echo Skipping installing the dependencies"
          build_command: "echo Skipping building the web files"
      - name: Status check
        uses: Sibz/github-status-action@v1.1.1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: Netlify preview
          state: success
          target_url: ${{ env.NETLIFY_PREVIEW_URL }} 

  Release:
    name: Release
    needs: deploy-app
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: ${{ 'true' == env.RELEASE_REQUIRED }}
    steps:
      - uses: actions/checkout@v3
        name: ‚úÖ Checkout
      - name: ‚öôÔ∏è Install NodeJS ${{env.NODEJS_VERSION}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
      - name: ‚öôÔ∏è Install Conventional Commits
        run: npm install conventional-changelog-conventionalcommits
      - name: üè∑Ô∏è Tag
        id: tag-release
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
          GIT_AUTHOR_NAME: devops_team_2
          GIT_COMMITTER_NAME: devops_team_2
        run: |
          npx semantic-release --debug